# Enter a module that depends on another v2+ module.
cd foo 

# Sanity check the module seems well formed.
go list -m all
stdout '^example.com/foo$'
stdout '^example.com/bar/v2 v2.0.0 => ../bar$'
go build

# Ask go-fuzz-build to build, which should find the fuzz target in foo.
# Right now, this should fail because we have not modified the code to support modules,
# and v2 modules are particularly problematic if not handled properly.
! go-fuzz-build -func=FuzzDependOnV2Mod

# Define two modules.
# example.com/foo has a fuzz function, and depends on example.com/bar/v2.

-- foo/go.mod --
module example.com/foo

require example.com/bar/v2 v2.0.0

replace example.com/bar/v2 => ../bar

-- foo/fuzz.go --
package foo

import "example.com/bar/v2"

func FuzzDependOnV2Mod(data []byte) int {
    bar.Bar()
    return 0
}

-- bar/go.mod --
module example.com/bar/v2

-- bar/bar.go --
package bar

func Bar() string {
    return "hello from bar"
}
